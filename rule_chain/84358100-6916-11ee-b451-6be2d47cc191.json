{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : null,
    "debugMode" : true,
    "externalId" : null,
    "firstRuleNodeId" : null,
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "84358100-6916-11ee-b451-6be2d47cc191"
    },
    "name" : "Slack Notifier",
    "root" : false,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 0,
      "toIndex" : 1,
      "type" : "True"
    }, {
      "fromIndex" : 1,
      "toIndex" : 2,
      "type" : "True"
    }, {
      "fromIndex" : 2,
      "toIndex" : 3,
      "type" : "True"
    }, {
      "fromIndex" : 2,
      "toIndex" : 4,
      "type" : "False"
    }, {
      "fromIndex" : 3,
      "toIndex" : 8,
      "type" : "Success"
    }, {
      "fromIndex" : 4,
      "toIndex" : 5,
      "type" : "True"
    }, {
      "fromIndex" : 5,
      "toIndex" : 8,
      "type" : "Success"
    }, {
      "fromIndex" : 7,
      "toIndex" : 0,
      "type" : "Failure"
    }, {
      "fromIndex" : 7,
      "toIndex" : 0,
      "type" : "Success"
    }, {
      "fromIndex" : 8,
      "toIndex" : 6,
      "type" : "Success"
    } ],
    "firstNodeIndex" : null,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 407,
        "layoutY" : 218
      },
      "configuration" : {
        "jsScript" : "if (msg.severity == \"MAJOR\") \n    return metadata.ss_slackMajor === 'true';\nelse if (msg.severity ==\"CRITICAL\")\n    return metadata.ss_slackCritical === 'true';\n"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "a59a1680-6916-11ee-b451-6be2d47cc191"
      },
      "name" : "Slack notify option",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 569,
        "layoutY" : 287
      },
      "configuration" : {
        "jsScript" : "return (msg.status === \"ACTIVE_UNACK\" || msg.status === \"ACTIVE_ACK\");\r\n"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "a59b27f0-6916-11ee-b451-6be2d47cc191"
      },
      "name" : "Create Alarm",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 724,
        "layoutY" : 349
      },
      "configuration" : {
        "jsScript" : "if (msg.status == \"ACTIVE_UNACK\" && msg.details.count <= 1) {\n    return true;\n}else if (msg.status == \"ACTIVE_UNACK\" && msg.details.count > 1) {\n    return false;\n}"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "a59b4f00-6916-11ee-b451-6be2d47cc191"
      },
      "name" : "New Alarm unacknowledged",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1007,
        "layoutY" : 302
      },
      "configuration" : {
        "jsScript" : "var newMsg = {};\r\nvar emojie = '';\r\nvar emj = '';\r\nvar droplet = '\\uD83D\\uDCA7'; // üíß\r\nvar thermometer = '\\uD83C\\uDF21'; // üå°Ô∏è\r\nvar siren = '\\uD83D\\uDD14'; // üö®\r\nvar alert = '\\u26A0'; // ‚ö†Ô∏è\r\n\r\nif (metadata.measureName == 'Humidity') {\r\n    emojie = droplet; // Assign the appropriate emoji to the variable\r\n} else if (metadata.measureName == 'Temperature') {\r\n    emojie = thermometer; // Assign the appropriate emoji to the variable\r\n}\r\n\r\n\r\nif (msg.severity == \"MAJOR\") {\r\n    emj = siren; // Assign the appropriate emoji to the variable\r\n} else if (msg.severity == \"CRITICAL\") {\r\n    emj = alert; // Assign the appropriate emoji to the variable\r\n}\r\n\r\n\r\nif (msg.status == \"ACTIVE_UNACK\")\r\n    newMsg.text = emj + ' ' + msg.severity +  ' ' + emojie + ' ' + msg.name + '\\n'  + metadata.label + ' reports ' + metadata.measure + ' ' + metadata.measureUnit;\r\nelse if (msg.status == \"CLEARED_UNACK\" || msg.status ==\r\n    'CLEARED_ACK')\r\n    newMsg.text =   emj + ' ' + msg.severity  + ' ' + emojie + ' ' + msg.name + ' '  + 'Cleared ' + '\\n '   + metadata.label + ' reports ' + metadata.measure + ' ' + metadata.measureUnit;\r\n\r\nreturn {\r\n    msg: newMsg,\r\n    metadata: metadata,\r\n    msgType: msgType\r\n};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "a59b7610-6916-11ee-b451-6be2d47cc191"
      },
      "name" : "Construct Slack Notify",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 891,
        "layoutY" : 423
      },
      "configuration" : {
        "jsScript" : "if (msg.details.statusChange == 1) {\n    return true; \n}else if (msg.details.statusChange == 0) {\n    return false;\n      }"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "a59bc430-6916-11ee-b451-6be2d47cc191"
      },
      "name" : "Status Updated",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1126,
        "layoutY" : 426
      },
      "configuration" : {
        "jsScript" : "var newMsg = {};\r\nvar emojie = ''; \r\nvar emj = '';\r\nvar droplet = '\\uD83D\\uDCA7'; // üíß\r\nvar thermometer = '\\uD83C\\uDF21'; // üå°Ô∏è\r\nvar siren = '\\uD83D\\uDD14'; // üö®\r\nvar alert = '\\u26A0'; // ‚ö†Ô∏è\r\n\r\nif (metadata.measureName == 'Humidity') {\r\n    emojie = droplet; // Assign the appropriate emoji to the variable\r\n} else if (metadata.measureName == 'Temperature') {\r\n    emojie = thermometer; // Assign the appropriate emoji to the variable\r\n}\r\n\r\nif (msg.severity == \"MAJOR\") {\r\n    emj = siren; // Assign the appropriate emoji to the variable\r\n} else if (msg.severity == \"CRITICAL\") {\r\n    emj = alert; // Assign the appropriate emoji to the variable\r\n}\r\n\r\n\r\nif (msg.status == \"ACTIVE_UNACK\")\r\n    newMsg.text = emojie + ' ' + msg.name +  ' severity changed to ' + emj + ' ' + msg.severity + '\\n' + metadata.label + ' reports ' + metadata.measure + ' ' + metadata.measureUnit;\r\nelse if (msg.status == \"CLEARED_UNACK\" || msg.status ==\r\n    'CLEARED_ACK')\r\n    newMsg.text = emj + ' ' + msg.severity + ' ' + emojie + ' ' + msg.name + ' Cleared: ' + '\\n' + metadata.label + ' reports ' + metadata.measure + ' ' + metadata.measureUnit;\r\n\r\nreturn {\r\n    msg: newMsg,\r\n    metadata: metadata,\r\n    msgType: msgType\r\n};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "a59c1250-6916-11ee-b451-6be2d47cc191"
      },
      "name" : "Construct Slack Notify",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1548,
        "layoutY" : 350
      },
      "configuration" : {
        "restEndpointUrlPattern" : "${slackNotify} ",
        "requestMethod" : "POST",
        "useSimpleClientHttpFactory" : false,
        "enableProxy" : false,
        "useSystemProxyProperties" : false,
        "proxyScheme" : null,
        "proxyHost" : null,
        "proxyPort" : 0,
        "proxyUser" : null,
        "proxyPassword" : null,
        "readTimeoutMs" : 0,
        "maxParallelRequestsCount" : 0,
        "headers" : {
          "Content-Type" : "application/json"
        },
        "useRedisQueueForMsgPersistence" : false,
        "trimQueue" : false,
        "maxQueueSize" : 0,
        "credentials" : {
          "type" : "anonymous"
        }
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "a59c3960-6916-11ee-b451-6be2d47cc191"
      },
      "name" : "slack integration",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.rest.TbRestApiCallNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 260,
        "layoutY" : 149
      },
      "configuration" : {
        "relationsQuery" : {
          "fetchLastLevelOnly" : false,
          "direction" : "TO",
          "maxLevel" : 1,
          "filters" : [ {
            "relationType" : "Contains",
            "entityTypes" : [ "ASSET" ]
          } ]
        },
        "dataMapping" : {
          "slackUrl" : "as_slackUrl"
        },
        "dataToFetch" : "ATTRIBUTES",
        "fetchTo" : "METADATA"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "e83dfdf0-7e59-11ee-b451-6be2d47cc191"
      },
      "name" : "Get Asset Salck Notification Url No",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.metadata.TbGetRelatedAttributeNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1300,
        "layoutY" : 349
      },
      "configuration" : {
        "jsScript" : "var slackUrls = metadata.slackNotify.split(\",\");\nvar slackNotifyLevel;\n\nif (metadata.cu_slackUrl != undefined) {\n    slackNotifyLevel = metadata.cu_slackUrl;\n} else if (metadata.as_slackUrl != undefined) {\n    slackNotifyLevel = metadata.as_slackUrl;\n} else if (metadata.ss_slackUrl != undefined) {\n    slackNotifyLevel = metadata.ss_slackUrl;\n} else {\n    slackNotifyLevel = 0;\n}\n\nswitch (slackNotifyLevel) {\n    case \"1\":\n        metadata.slackNotify = slackUrls[0].trim();\n        break;\n    case \"2\":\n         metadata.slackNotify = slackUrls[1].trim();\n         break;\n    case \"3\":\n        metadata.slackNotify = slackUrls[2].trim();\n        break;\n    default:\n        metadata.slackNotify = slackUrls[0].trim();\n}\n\nreturn {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugMode" : true,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "7a5c9ca0-691a-11ee-b451-6be2d47cc191"
      },
      "name" : "Slack Urls",
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}