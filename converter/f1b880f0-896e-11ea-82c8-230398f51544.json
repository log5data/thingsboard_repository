{
  "entityType" : "CONVERTER",
  "entity" : {
    "additionalInfo" : {
      "description" : ""
    },
    "configuration" : {
      "encoder" : "// Encode downlink data from incoming Rule Engine message\n\n// msg - JSON message payload downlink message json\n// msgType - type of message, for ex. 'ATTRIBUTES_UPDATED', 'POST_TELEMETRY_REQUEST', etc.\n// metadata - list of key-value pairs with additional data about the message\n// integrationMetadata - list of key-value pairs with additional data defined in Integration executing this converter\n\n/** Encoder **/\n\nvar data = {};\nvar decoded_payload = {};\n\nvar downlinks = [];\n// Process data from incoming message and metadata\n\ndecoded_payload.batteryReportingFreq = msg.batteryReportingFreq;\ndecoded_payload.tempRHReportingFreq = msg.tempRHReportingFreq;\ndecoded_payload.secondsPerTick = msg.secondsPerTick;\n\nvar application_ids = {\n    application_id: \"tektelic\"\n};\n\nvar end_device_ids = {\n    device_id:metadata.devId,\n    application_ids: application_ids\n};\n\ndownlinks[0] = {\n    f_port: 100,\n    decoded_payload:decoded_payload,\n    priority: \"NORMAL\",\n    confirmed:false\n};\n\ndata = {\n//    end_device_ids: end_device_ids,\n    downlinks: downlinks\n};\n\nvar result = {\n\n    // downlink data content type: JSON, TEXT or BINARY (base64 format)\n    contentType: \"JSON\",\n    data: JSON.stringify(data),\n\n    // Optional metadata object presented in key/value format\n    metadata: {\n            topic: \"v3/tektelic/devices/\" + metadata.devId + \"/down/replace\"\n    }\n\n};\n\nreturn result;"
    },
    "debugMode" : true,
    "edgeTemplate" : false,
    "externalId" : null,
    "id" : {
      "entityType" : "CONVERTER",
      "id" : "f1b880f0-896e-11ea-82c8-230398f51544"
    },
    "name" : "Tektelic - TTS",
    "type" : "DOWNLINK"
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}